{"version":3,"file":"index.js","sources":["../src/private.ts","../src/index.ts"],"sourcesContent":["import type { CSS } from \"@stitches/core\";\n\nexport type TDefaultMixin =\n  | \"box\"\n  | \"breakout\"\n  | \"minHeightScreen\"\n  | \"screenReaderOnly\"\n  | \"notScreenReaderOnly\";\n\nexport interface IDefaultMixins extends Record<TDefaultMixin, CSS> {}\n\nexport const defaultMixins: IDefaultMixins = {\n  box: {\n    minWidth: 0,\n    boxSizing: \"border-box\",\n    \"&::before, &::after\": {\n      boxSizing: \"inherit\",\n    },\n  },\n  breakout: {\n    width: \"100vw\",\n    position: \"relative\",\n    left: \"50%\",\n    right: \"50%\",\n    marginLeft: \"-50vw\",\n    marginRight: \"-50vw\",\n  },\n  minHeightScreen: {\n    minHeight: \"100vh\",\n    \"@supports (-webkit-touch-callout: none)\": {\n      minHeight: \"-webkit-fill-available\",\n    },\n  },\n  screenReaderOnly: {\n    position: \"absolute\",\n    width: \"1px\",\n    height: \"1px\",\n    padding: \"0\",\n    margin: \"-1px\",\n    overflow: \"hidden\",\n    clip: \"rect(0, 0, 0, 0)\",\n    whiteSpace: \"nowrap\",\n    borderWidth: \"0\",\n  },\n  notScreenReaderOnly: {\n    position: \"static\",\n    width: \"auto\",\n    height: \"auto\",\n    padding: \"0\",\n    margin: \"0\",\n    overflow: \"visible\",\n    clip: \"auto\",\n    whiteSpace: \"normal\",\n  },\n};\n","import type { CSS } from \"@stitches/core\";\nimport { defaultMixins, TDefaultMixin } from \"./private\";\n\nexport interface IMixins {\n  [key: string]: CSS;\n}\n\nexport const mixins =\n  <T extends IMixins = {}>(customMixins?: T) =>\n  (key: keyof T | TDefaultMixin | (keyof T | TDefaultMixin)[]) => {\n    const mixins = { ...defaultMixins, ...customMixins };\n\n    return Array.isArray(key)\n      ? key.reduce((acc, cv) => ({ ...acc, ...mixins[cv] }), {})\n      : mixins[key];\n  };\n"],"names":["defaultMixins","box","minWidth","boxSizing","breakout","width","position","left","right","marginLeft","marginRight","minHeightScreen","minHeight","screenReaderOnly","height","padding","margin","overflow","clip","whiteSpace","borderWidth","notScreenReaderOnly","mixins","customMixins","key","Array","isArray","reduce","acc","cv"],"mappings":";;;;;;;;;;;;;;;;;;AAWO,IAAMA,aAAa,GAAmB;AAC3CC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,CADP;AAEHC,IAAAA,SAAS,EAAE,YAFR;AAGH,2BAAuB;AACrBA,MAAAA,SAAS,EAAE;AADU;AAHpB,GADsC;AAQ3CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,OADC;AAERC,IAAAA,QAAQ,EAAE,UAFF;AAGRC,IAAAA,IAAI,EAAE,KAHE;AAIRC,IAAAA,KAAK,EAAE,KAJC;AAKRC,IAAAA,UAAU,EAAE,OALJ;AAMRC,IAAAA,WAAW,EAAE;AANL,GARiC;AAgB3CC,EAAAA,eAAe,EAAE;AACfC,IAAAA,SAAS,EAAE,OADI;AAEf,+CAA2C;AACzCA,MAAAA,SAAS,EAAE;AAD8B;AAF5B,GAhB0B;AAsB3CC,EAAAA,gBAAgB,EAAE;AAChBP,IAAAA,QAAQ,EAAE,UADM;AAEhBD,IAAAA,KAAK,EAAE,KAFS;AAGhBS,IAAAA,MAAM,EAAE,KAHQ;AAIhBC,IAAAA,OAAO,EAAE,GAJO;AAKhBC,IAAAA,MAAM,EAAE,MALQ;AAMhBC,IAAAA,QAAQ,EAAE,QANM;AAOhBC,IAAAA,IAAI,EAAE,kBAPU;AAQhBC,IAAAA,UAAU,EAAE,QARI;AAShBC,IAAAA,WAAW,EAAE;AATG,GAtByB;AAiC3CC,EAAAA,mBAAmB,EAAE;AACnBf,IAAAA,QAAQ,EAAE,QADS;AAEnBD,IAAAA,KAAK,EAAE,MAFY;AAGnBS,IAAAA,MAAM,EAAE,MAHW;AAInBC,IAAAA,OAAO,EAAE,GAJU;AAKnBC,IAAAA,MAAM,EAAE,GALW;AAMnBC,IAAAA,QAAQ,EAAE,SANS;AAOnBC,IAAAA,IAAI,EAAE,MAPa;AAQnBC,IAAAA,UAAU,EAAE;AARO;AAjCsB,CAAtC;;ICJMG,MAAM,GACjB,SADWA,MACX,CAAyBC,YAAzB;AAAA,SACA,UAACC,GAAD;AACE,QAAMF,MAAM,gBAAQtB,aAAR,EAA0BuB,YAA1B,CAAZ;;AAEA,WAAOE,KAAK,CAACC,OAAN,CAAcF,GAAd,IACHA,GAAG,CAACG,MAAJ,CAAW,UAACC,GAAD,EAAMC,EAAN;AAAA,0BAAmBD,GAAnB,EAA2BN,MAAM,CAACO,EAAD,CAAjC;AAAA,KAAX,EAAqD,EAArD,CADG,GAEHP,MAAM,CAACE,GAAD,CAFV;AAGD,GAPD;AAAA;;;;"}