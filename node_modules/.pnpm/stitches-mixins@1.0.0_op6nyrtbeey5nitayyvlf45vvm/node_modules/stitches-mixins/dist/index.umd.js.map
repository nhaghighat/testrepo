{"version":3,"file":"index.umd.js","sources":["../src/private.ts","../src/index.ts"],"sourcesContent":["import type { CSS } from \"@stitches/core\";\n\nexport type TDefaultMixin =\n  | \"box\"\n  | \"breakout\"\n  | \"minHeightScreen\"\n  | \"screenReaderOnly\"\n  | \"notScreenReaderOnly\";\n\nexport interface IDefaultMixins extends Record<TDefaultMixin, CSS> {}\n\nexport const defaultMixins: IDefaultMixins = {\n  box: {\n    minWidth: 0,\n    boxSizing: \"border-box\",\n    \"&::before, &::after\": {\n      boxSizing: \"inherit\",\n    },\n  },\n  breakout: {\n    width: \"100vw\",\n    position: \"relative\",\n    left: \"50%\",\n    right: \"50%\",\n    marginLeft: \"-50vw\",\n    marginRight: \"-50vw\",\n  },\n  minHeightScreen: {\n    minHeight: \"100vh\",\n    \"@supports (-webkit-touch-callout: none)\": {\n      minHeight: \"-webkit-fill-available\",\n    },\n  },\n  screenReaderOnly: {\n    position: \"absolute\",\n    width: \"1px\",\n    height: \"1px\",\n    padding: \"0\",\n    margin: \"-1px\",\n    overflow: \"hidden\",\n    clip: \"rect(0, 0, 0, 0)\",\n    whiteSpace: \"nowrap\",\n    borderWidth: \"0\",\n  },\n  notScreenReaderOnly: {\n    position: \"static\",\n    width: \"auto\",\n    height: \"auto\",\n    padding: \"0\",\n    margin: \"0\",\n    overflow: \"visible\",\n    clip: \"auto\",\n    whiteSpace: \"normal\",\n  },\n};\n","import type { CSS } from \"@stitches/core\";\nimport { defaultMixins, TDefaultMixin } from \"./private\";\n\nexport interface IMixins {\n  [key: string]: CSS;\n}\n\nexport const mixins =\n  <T extends IMixins = {}>(customMixins?: T) =>\n  (key: keyof T | TDefaultMixin | (keyof T | TDefaultMixin)[]) => {\n    const mixins = { ...defaultMixins, ...customMixins };\n\n    return Array.isArray(key)\n      ? key.reduce((acc, cv) => ({ ...acc, ...mixins[cv] }), {})\n      : mixins[key];\n  };\n"],"names":["defaultMixins","box","minWidth","boxSizing","breakout","width","position","left","right","marginLeft","marginRight","minHeightScreen","minHeight","screenReaderOnly","height","padding","margin","overflow","clip","whiteSpace","borderWidth","notScreenReaderOnly","mixins","customMixins","key","Array","isArray","reduce","acc","cv"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;EAWO,IAAMA,aAAa,GAAmB;EAC3CC,EAAAA,GAAG,EAAE;EACHC,IAAAA,QAAQ,EAAE,CADP;EAEHC,IAAAA,SAAS,EAAE,YAFR;EAGH,2BAAuB;EACrBA,MAAAA,SAAS,EAAE;EADU;EAHpB,GADsC;EAQ3CC,EAAAA,QAAQ,EAAE;EACRC,IAAAA,KAAK,EAAE,OADC;EAERC,IAAAA,QAAQ,EAAE,UAFF;EAGRC,IAAAA,IAAI,EAAE,KAHE;EAIRC,IAAAA,KAAK,EAAE,KAJC;EAKRC,IAAAA,UAAU,EAAE,OALJ;EAMRC,IAAAA,WAAW,EAAE;EANL,GARiC;EAgB3CC,EAAAA,eAAe,EAAE;EACfC,IAAAA,SAAS,EAAE,OADI;EAEf,+CAA2C;EACzCA,MAAAA,SAAS,EAAE;EAD8B;EAF5B,GAhB0B;EAsB3CC,EAAAA,gBAAgB,EAAE;EAChBP,IAAAA,QAAQ,EAAE,UADM;EAEhBD,IAAAA,KAAK,EAAE,KAFS;EAGhBS,IAAAA,MAAM,EAAE,KAHQ;EAIhBC,IAAAA,OAAO,EAAE,GAJO;EAKhBC,IAAAA,MAAM,EAAE,MALQ;EAMhBC,IAAAA,QAAQ,EAAE,QANM;EAOhBC,IAAAA,IAAI,EAAE,kBAPU;EAQhBC,IAAAA,UAAU,EAAE,QARI;EAShBC,IAAAA,WAAW,EAAE;EATG,GAtByB;EAiC3CC,EAAAA,mBAAmB,EAAE;EACnBf,IAAAA,QAAQ,EAAE,QADS;EAEnBD,IAAAA,KAAK,EAAE,MAFY;EAGnBS,IAAAA,MAAM,EAAE,MAHW;EAInBC,IAAAA,OAAO,EAAE,GAJU;EAKnBC,IAAAA,MAAM,EAAE,GALW;EAMnBC,IAAAA,QAAQ,EAAE,SANS;EAOnBC,IAAAA,IAAI,EAAE,MAPa;EAQnBC,IAAAA,UAAU,EAAE;EARO;EAjCsB,CAAtC;;MCJMG,MAAM,GACjB,SADWA,MACX,CAAyBC,YAAzB;EAAA,SACA,UAACC,GAAD;EACE,QAAMF,MAAM,gBAAQtB,aAAR,EAA0BuB,YAA1B,CAAZ;;EAEA,WAAOE,KAAK,CAACC,OAAN,CAAcF,GAAd,IACHA,GAAG,CAACG,MAAJ,CAAW,UAACC,GAAD,EAAMC,EAAN;EAAA,0BAAmBD,GAAnB,EAA2BN,MAAM,CAACO,EAAD,CAAjC;EAAA,KAAX,EAAqD,EAArD,CADG,GAEHP,MAAM,CAACE,GAAD,CAFV;EAGD,GAPD;EAAA;;;;;;;;"}