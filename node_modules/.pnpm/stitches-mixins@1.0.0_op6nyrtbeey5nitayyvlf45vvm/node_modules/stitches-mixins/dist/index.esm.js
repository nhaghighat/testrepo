function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var defaultMixins = {
  box: {
    minWidth: 0,
    boxSizing: "border-box",
    "&::before, &::after": {
      boxSizing: "inherit"
    }
  },
  breakout: {
    width: "100vw",
    position: "relative",
    left: "50%",
    right: "50%",
    marginLeft: "-50vw",
    marginRight: "-50vw"
  },
  minHeightScreen: {
    minHeight: "100vh",
    "@supports (-webkit-touch-callout: none)": {
      minHeight: "-webkit-fill-available"
    }
  },
  screenReaderOnly: {
    position: "absolute",
    width: "1px",
    height: "1px",
    padding: "0",
    margin: "-1px",
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    borderWidth: "0"
  },
  notScreenReaderOnly: {
    position: "static",
    width: "auto",
    height: "auto",
    padding: "0",
    margin: "0",
    overflow: "visible",
    clip: "auto",
    whiteSpace: "normal"
  }
};

var mixins = function mixins(customMixins) {
  return function (key) {
    var mixins = _extends({}, defaultMixins, customMixins);

    return Array.isArray(key) ? key.reduce(function (acc, cv) {
      return _extends({}, acc, mixins[cv]);
    }, {}) : mixins[key];
  };
};

export { mixins };
//# sourceMappingURL=index.esm.js.map
